// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.3
// source: ffmpeg.proto

package ffmpeg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffmpeg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_ffmpeg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_ffmpeg_proto_rawDescGZIP(), []int{0}
}

func (x *Info) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Info) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Param struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputVideo  string      `protobuf:"bytes,1,opt,name=InputVideo,proto3" json:"InputVideo,omitempty"`
	InputAudio  string      `protobuf:"bytes,2,opt,name=InputAudio,proto3" json:"InputAudio,omitempty"`
	OutputVideo string      `protobuf:"bytes,3,opt,name=OutputVideo,proto3" json:"OutputVideo,omitempty"`
	Subtitles   []*Subtitle `protobuf:"bytes,4,rep,name=Subtitles,proto3" json:"Subtitles,omitempty"`
}

func (x *Param) Reset() {
	*x = Param{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffmpeg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Param) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Param) ProtoMessage() {}

func (x *Param) ProtoReflect() protoreflect.Message {
	mi := &file_ffmpeg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Param.ProtoReflect.Descriptor instead.
func (*Param) Descriptor() ([]byte, []int) {
	return file_ffmpeg_proto_rawDescGZIP(), []int{1}
}

func (x *Param) GetInputVideo() string {
	if x != nil {
		return x.InputVideo
	}
	return ""
}

func (x *Param) GetInputAudio() string {
	if x != nil {
		return x.InputAudio
	}
	return ""
}

func (x *Param) GetOutputVideo() string {
	if x != nil {
		return x.OutputVideo
	}
	return ""
}

func (x *Param) GetSubtitles() []*Subtitle {
	if x != nil {
		return x.Subtitles
	}
	return nil
}

type Subtitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locale      string `protobuf:"bytes,1,opt,name=locale,proto3" json:"locale,omitempty"`
	LocaleText  string `protobuf:"bytes,2,opt,name=localeText,proto3" json:"localeText,omitempty"`
	SubtitleUrl string `protobuf:"bytes,3,opt,name=subtitleUrl,proto3" json:"subtitleUrl,omitempty"`
}

func (x *Subtitle) Reset() {
	*x = Subtitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffmpeg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subtitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subtitle) ProtoMessage() {}

func (x *Subtitle) ProtoReflect() protoreflect.Message {
	mi := &file_ffmpeg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subtitle.ProtoReflect.Descriptor instead.
func (*Subtitle) Descriptor() ([]byte, []int) {
	return file_ffmpeg_proto_rawDescGZIP(), []int{2}
}

func (x *Subtitle) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *Subtitle) GetLocaleText() string {
	if x != nil {
		return x.LocaleText
	}
	return ""
}

func (x *Subtitle) GetSubtitleUrl() string {
	if x != nil {
		return x.SubtitleUrl
	}
	return ""
}

var File_ffmpeg_proto protoreflect.FileDescriptor

var file_ffmpeg_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x66, 0x66, 0x6d, 0x70, 0x65, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x66, 0x66, 0x6d, 0x70, 0x65, 0x67, 0x22, 0x2c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x4d, 0x73, 0x67, 0x22, 0x99, 0x01, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1e,
	0x0a, 0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1e,
	0x0a, 0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x20,
	0x0a, 0x0b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x12, 0x2e, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x66, 0x6d, 0x70, 0x65, 0x67, 0x2e, 0x53, 0x75, 0x62,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x09, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73,
	0x22, 0x64, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x32, 0x33, 0x0a, 0x06, 0x46, 0x46, 0x4d, 0x50, 0x45, 0x47,
	0x12, 0x29, 0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x0d,
	0x2e, 0x66, 0x66, 0x6d, 0x70, 0x65, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x0c, 0x2e,
	0x66, 0x66, 0x6d, 0x70, 0x65, 0x67, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x5a, 0x08, 0x2e,
	0x2f, 0x66, 0x66, 0x6d, 0x70, 0x65, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ffmpeg_proto_rawDescOnce sync.Once
	file_ffmpeg_proto_rawDescData = file_ffmpeg_proto_rawDesc
)

func file_ffmpeg_proto_rawDescGZIP() []byte {
	file_ffmpeg_proto_rawDescOnce.Do(func() {
		file_ffmpeg_proto_rawDescData = protoimpl.X.CompressGZIP(file_ffmpeg_proto_rawDescData)
	})
	return file_ffmpeg_proto_rawDescData
}

var file_ffmpeg_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ffmpeg_proto_goTypes = []interface{}{
	(*Info)(nil),     // 0: ffmpeg.Info
	(*Param)(nil),    // 1: ffmpeg.Param
	(*Subtitle)(nil), // 2: ffmpeg.Subtitle
}
var file_ffmpeg_proto_depIdxs = []int32{
	2, // 0: ffmpeg.Param.Subtitles:type_name -> ffmpeg.Subtitle
	1, // 1: ffmpeg.FFMPEG.MergeVideo:input_type -> ffmpeg.Param
	0, // 2: ffmpeg.FFMPEG.MergeVideo:output_type -> ffmpeg.Info
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ffmpeg_proto_init() }
func file_ffmpeg_proto_init() {
	if File_ffmpeg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ffmpeg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffmpeg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Param); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffmpeg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subtitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ffmpeg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ffmpeg_proto_goTypes,
		DependencyIndexes: file_ffmpeg_proto_depIdxs,
		MessageInfos:      file_ffmpeg_proto_msgTypes,
	}.Build()
	File_ffmpeg_proto = out.File
	file_ffmpeg_proto_rawDesc = nil
	file_ffmpeg_proto_goTypes = nil
	file_ffmpeg_proto_depIdxs = nil
}
